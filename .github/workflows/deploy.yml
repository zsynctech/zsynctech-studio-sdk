name: Deploy

on:
  push:
    branches: [ master ]
  workflow_dispatch:  # permite rodar manualmente

jobs:
  publish:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      - name: Install uv
        run: pip install uv

      - name: Install dependencies
        run: uv sync --all-extras --dev

      - name: Build package
        run: uv build

      - name: Get project version
        id: version
        run: |
          VERSION=$(uv run python -c "import tomllib; print(tomllib.load(open('pyproject.toml','rb'))['project']['version'])")
          echo "VERSION=$VERSION" >> $GITHUB_ENV
          echo "version=$VERSION" >> $GITHUB_OUTPUT

      - name: Create git tag if not exists
        run: |
          if git ls-remote --tags origin | grep -q "refs/tags/v${{ env.VERSION }}"; then
            echo "Tag v${{ env.VERSION }} already exists, skipping tag creation."
          else
            git config user.name "github-actions[bot]"
            git config user.email "41898282+github-actions[bot]@users.noreply.github.com"
            git tag v${{ env.VERSION }}
            git push origin v${{ env.VERSION }}
          fi

      - name: Publish package
        env:
          UV_PYPI_TOKEN: ${{ secrets.PYPI_TOKEN }}
          UV_TEST_PYPI_TOKEN: ${{ secrets.TEST_PYPI_TOKEN }}
        run: |
          if [ "${{ github.event_name }}" = "workflow_dispatch" ]; then
            echo "Publishing to TestPyPI..."
            uv publish --username __token__ --password $UV_PYPI_TOKEN
          else
            echo "Publishing to PyPI..."
            uv publish --username __token__ --password $UV_PYPI_TOKEN
          fi
